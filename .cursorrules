# Application de Planification de Repas

## üìã Description du Projet

Application web collaborative permettant de planifier les repas hebdomadaires et g√©n√©rer automatiquement des listes de courses. L'application facilite l'organisation des repas entre conjoints/proches en permettant une planification partag√©e et une gestion intelligente des ingr√©dients.

## ‚ú® Fonctionnalit√©s Principales

### üçΩÔ∏è Gestion des Repas
- **CRUD complet des repas** : cr√©ation, modification, suppression, consultation
- **Base de donn√©es des repas** : r√©utilisation des repas cr√©√©s pr√©c√©demment
- **Gestion des ingr√©dients** : association d'ingr√©dients avec quantit√©s √† chaque repas
- **Auto-compl√©tion** : suggestions d'ingr√©dients existants lors de la cr√©ation

### üìÖ Planification Hebdomadaire
- **Planning par semaine** : vue calendaire avec cr√©neaux midi/soir pour chaque jour
- **Attribution facile** : glisser-d√©poser ou s√©lection de repas existants
- **Gestion collaborative** : partage et modification √† plusieurs utilisateurs
- **Historique** : consultation des plannings des semaines pr√©c√©dentes

### üõí Liste de Courses Intelligente
- **G√©n√©ration automatique** : consolidation de tous les ingr√©dients de la semaine
- **V√©rification disponibilit√©** : interface pour cocher les ingr√©dients d√©j√† poss√©d√©s
- **Optimisation** : calcul des quantit√©s totales n√©cessaires par ingr√©dient
- **Export/partage** : possibilit√© d'exporter la liste pour les courses

### üë• Syst√®me Multi-utilisateurs
- **Authentification s√©curis√©e** : syst√®me de comptes utilisateurs
- **Repas priv√©s** : chaque utilisateur g√®re ses propres repas
- **Plannings partag√©s** : collaboration en temps r√©el sur les planifications
- **Gestion des droits** : modification collaborative sans hi√©rarchie admin/user

## üõ†Ô∏è Stack Technique

### Backend
- **Framework** : Symfony 7
- **API** : REST API avec API Platform ou controllers classiques
- **Base de donn√©es** : MySQL/PostgreSQL avec Doctrine ORM
- **Authentification** : JWT avec LexikJWTAuthenticationBundle
- **CORS** : Configuration pour communication frontend/backend

### Frontend
- **Framework** : React avec hooks modernes
- TypeScript
- TailwindCSS
- **Routing** : React Router DOM
- **HTTP Client** : Fetch API natif (pas de d√©pendance externe)
- **UI Library** : Material-UI pour l'interface utilisateur
- **Gestion d'√©tat** : Context API ou Redux Toolkit selon complexit√©


## üìä Mod√®le de Donn√©es

### Entit√©s Principales
- **User** : gestion des utilisateurs et authentification
- **Meal** : repas avec nom, description, temps de pr√©paration
- **Ingredient** : ingr√©dients avec unit√©s de mesure
- **MealIngredient** : relation repas/ingr√©dients avec quantit√©s
- **WeekPlanning** : planifications hebdomadaires
- **MealSlot** : cr√©neaux repas (jour + moment + repas)
- **ShoppingList** : listes de courses par planning
- **ShoppingItem** : √©l√©ments de liste avec √©tat disponible/non

### Relations Cl√©s
- User ‚Üí Meals (un-√†-plusieurs)
- Meal ‚Üí Ingredients (plusieurs-√†-plusieurs avec quantit√©s)
- WeekPlanning ‚Üí MealSlots (un-√†-plusieurs)
- WeekPlanning ‚Üí ShoppingList (un-√†-un)
- Users ‚Üî WeekPlannings (plusieurs-√†-plusieurs pour partage)

## üöÄ √âvolutions Possibles

### Phase 2 - Am√©liorations UX
- **Application mobile** : React Native ou PWA
- **Notifications** : rappels pour faire les courses
- **Import/Export** : sauvegarde et partage de plannings
- **Templates** : mod√®les de semaines r√©currentes

### Phase 3 - Intelligence
- **Suggestions automatiques** : IA pour proposer des repas selon historique
- **Optimisation nutritionnelle** : √©quilibre des repas sur la semaine
- **Saisonnalit√©** : suggestions d'ingr√©dients selon la saison
- **Analyse des habitudes** : statistiques sur les repas favoris

### Phase 4 - √âcosyst√®me
- **API publique** : int√©gration avec d'autres services
- **Partenariats** : connexion avec services de livraison de courses
- **Communaut√©** : partage public de recettes entre utilisateurs
- **Gestion budg√©taire** : estimation des co√ªts de courses

### Phase 5 - Fonctionnalit√©s Avanc√©es
- **Gestion des stocks** : suivi des ingr√©dients en r√©serve
- **Scanner codes-barres** : ajout rapide d'ingr√©dients
- **Reconnaissance vocale** : cr√©ation de listes par commande vocale
- **Multi-foyers** : gestion de plusieurs lieux de vie

## üéØ Objectifs du Projet

### Objectifs Imm√©diats
- Simplifier la planification hebdomadaire des repas
- Automatiser la cr√©ation des listes de courses
- Faciliter la collaboration entre conjoints/colocataires
- R√©duire le gaspillage alimentaire par une meilleure organisation

### Objectifs √† Long Terme
- Cr√©er un √©cosyst√®me complet de gestion alimentaire domestique
- D√©velopper une base utilisateurs fid√®le
- Possibilit√© de mon√©tisation via fonctionnalit√©s premium
- Extension vers d'autres aspects de la gestion domestique

## üìà M√©triques de Succ√®s

### Techniques
- Performance : temps de chargement < 2 secondes
- Disponibilit√© : uptime > 99%
- S√©curit√© : authentification robuste et protection des donn√©es

### Utilisateurs
- Adoption : utilisation r√©guli√®re (planification hebdomadaire)
- Collaboration : partage effectif entre utilisateurs
- Satisfaction : interface intuitive et workflow fluide

## üîí Consid√©rations S√©curit√©

- **Authentification** : JWT avec expiration et refresh tokens
- **Autorisation** : v√©rification des droits sur chaque ressource
- **Protection donn√©es** : chiffrement des donn√©es sensibles
- **CORS** : configuration stricte pour les appels API
- **Validation** : sanitisation de toutes les entr√©es utilisateur